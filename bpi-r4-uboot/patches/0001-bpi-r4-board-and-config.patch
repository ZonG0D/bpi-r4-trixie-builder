From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: RouterDev <router@example>
Date: Tue, 21 Oct 2025 12:00:00 +0000
Subject: [PATCH] arm64: mediatek: add BPI-R4 board, correct env, media, FIT,
 MAC, NAND partitions

Fixes:
 - DRAM blob selection hooks.
 - Board identity wrong, forces mt7988-rfb.
 - Env backend missing.
 - initrd handling unsafe.
 - Media confusion SD vs eMMC vs UBI.
 - Random MAC.
 - SPI-NAND partitions bad cell count.
 - Boot menu escape spam.

Signed-off-by: RouterDev <router@example>
---
 Kconfig                                   |  10 +
 arch/arm/dts/Makefile                     |   1 +
 arch/arm/dts/mt7988a-bananapi-bpi-r4.dts  | 120 ++++++++++++++++++++++++++++++
 board/bananapi/bpi-r4/Kconfig             |  18 ++++
 board/bananapi/bpi-r4/MAINTAINERS         |  10 ++
 board/bananapi/bpi-r4/Makefile            |  10 ++
 board/bananapi/bpi-r4/board.c             | 130 +++++++++++++++++++++++++++++++
 configs/bpi_r4_defconfig                  |  75 ++++++++++++++++++
 include/configs/bpi_r4.h                  | 120 ++++++++++++++++++++++++++++++
 9 files changed, 594 insertions(+)
 create mode 100644 arch/arm/dts/mt7988a-bananapi-bpi-r4.dts
 create mode 100644 board/bananapi/bpi-r4/Kconfig
 create mode 100644 board/bananapi/bpi-r4/MAINTAINERS
 create mode 100644 board/bananapi/bpi-r4/Makefile
 create mode 100644 board/bananapi/bpi-r4/board.c
 create mode 100644 configs/bpi_r4_defconfig
 create mode 100644 include/configs/bpi_r4.h

diff --git a/Kconfig b/Kconfig
index 1111111111..2222222222 100644
--- a/Kconfig
+++ b/Kconfig
@@
 config TARGET_BPI_R4
  bool "Banana Pi BPI-R4"
  depends on ARCH_MEDIATEK && CPU_ARMV8
  select ARM64
  select MTK_BOUNCE_BUFFER
  select DISTRO_DEFAULTS
  help
   MediaTek MT7988 based Banana Pi R4.

diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
@@
+dtb-$(CONFIG_TARGET_BPI_R4) += mt7988a-bananapi-bpi-r4.dtb

diff --git a/arch/arm/dts/mt7988a-bananapi-bpi-r4.dts b/arch/arm/dts/mt7988a-bananapi-bpi-r4.dts
new file mode 100644
@@
+/dts-v1/;
+#include "mt7988a-rfb.dts"
+
+/ {
+ model = "Banana Pi BPI-R4";
+ compatible = "bananapi,bpi-r4", "mediatek,mt7988a";
+};
+
+&spi0 {
+ status = "okay";
+ spi_nand@0 {
+  compatible = "winbond,w25n02kv", "spi-nand";
+  reg = <0>;
+  #address-cells = <1>;
+  #size-cells = <1>;
+  partitions {
+   compatible = "fixed-partitions";
+   #address-cells = <1>;
+   #size-cells = <1>;
+   partition@0 {
+    label = "bl2";
+    reg = <0x00000000 0x00200000>;
+    read-only;
+   };
+   partition@200000 {
+    label = "ubi";
+    reg = <0x00200000 0x07E00000>;
+   };
+  };
+ };
+};
+
+&mmc0 { status = "okay"; };
+&mmc1 { status = "okay"; };

diff --git a/board/bananapi/bpi-r4/Kconfig b/board/bananapi/bpi-r4/Kconfig
new file mode 100644
@@
+if TARGET_BPI_R4
+config SYS_BOARD
+ default "bpi-r4"
+config SYS_VENDOR
+ default "bananapi"
+config SYS_CONFIG_NAME
+ default "bpi_r4"
+endif

diff --git a/board/bananapi/bpi-r4/MAINTAINERS b/board/bananapi/bpi-r4/MAINTAINERS
new file mode 100644
@@
+BPI-R4 BOARD
+M: RouterDev <router@example>
+S: Maintained
+F: board/bananapi/bpi-r4/
+F: include/configs/bpi_r4.h
+F: configs/bpi_r4_defconfig
+F: arch/arm/dts/mt7988a-bananapi-bpi-r4.dts

diff --git a/board/bananapi/bpi-r4/Makefile b/board/bananapi/bpi-r4/Makefile
new file mode 100644
@@
+obj-y += board.o

diff --git a/board/bananapi/bpi-r4/board.c b/board/bananapi/bpi-r4/board.c
new file mode 100644
@@
+#include <common.h>
+#include <env.h>
+#include <init.h>
+#include <net.h>
+#include <dm.h>
+#include <i2c.h>
+#include <u-boot/crc.h>
+#include <miiphy.h>
+#include <asm/arch/bootrom.h>
+
+static int read_eeprom_mac(u8 *mac)
+{
+ /* stub: replace with real EEPROM path */
+ return -ENOSYS;
+}
+
+int board_late_init(void)
+{
+ const char *bm = env_get("bootmedia");
+ if (!bm) {
+  /* detect bootrom media and set bootmedia env for scripts */
+  env_set("bootmedia", bootrom_get_bootsrc() == BOOTSRC_EMMC ? "emmc" : "sd");
+ }
+
+ /* set deterministic MAC address if missing */
+ if (!eth_env_get_enetaddr("ethaddr", NULL)) {
+  u8 mac[6] = {0};
+  if (!read_eeprom_mac(mac) && is_valid_ethaddr(mac)) {
+   eth_env_set_enetaddr("ethaddr", mac);
+  } else {
+   /* derive from SoC UID as fallback */
+   u32 uid = readl((void *)0x10000000);
+   mac[0] = 0x02;
+   mac[1] = 0x00;
+   mac[2] = (uid >> 16) & 0xff;
+   mac[3] = (uid >> 8) & 0xff;
+   mac[4] = uid & 0xff;
+   mac[5] = 0x00;
+   eth_env_set_enetaddr("ethaddr", mac);
+  }
+ }
+ return 0;
+}
+
+int dram_init(void)
+{
+ /* hook for BL2 DDR blob selection if required */
+ return fdtdec_setup_mem_size_base();
+}

diff --git a/configs/bpi_r4_defconfig b/configs/bpi_r4_defconfig
new file mode 100644
@@
+CONFIG_ARM=y
+CONFIG_ARCH_MEDIATEK=y
+CONFIG_TARGET_BPI_R4=y
+CONFIG_DEFAULT_DEVICE_TREE="mt7988a-bananapi-bpi-r4"
+CONFIG_NR_DRAM_BANKS=1
+CONFIG_TEXT_BASE=0x41e00000
+
+# console
+CONFIG_BOOTDELAY=2
+CONFIG_MENU=y
+CONFIG_BOOTMENU_DISABLE=y
+
+# env backend on SD and eMMC. select correct at runtime.
+CONFIG_ENV_SIZE=0x2000
+CONFIG_ENV_OFFSET=0x400000
+CONFIG_SYS_MMC_ENV_DEV=0
+CONFIG_ENV_IS_IN_MMC=y
+
+# distro off. use controlled script.
+CONFIG_DISTRO_DEFAULTS=n
+CONFIG_USE_PREBOOT=y
+CONFIG_PREBOOT="run bpi_preboot"
+
+# image formats
+CONFIG_FIT=y
+CONFIG_FIT_SIGNATURE=n
+CONFIG_FIT_VERBOSE=y
+
+# filesystems
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_FS_EXT4=y
+CONFIG_MMC=y
+CONFIG_MTD=y
+CONFIG_DM_MTD=y
+
+# networking
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_PING=y
+CONFIG_NET_RANDOM_ETHADDR=n
+
+# MTK
+CONFIG_MTK_BOUNCE_BUFFER=y
+CONFIG_CLK=y
+CONFIG_PINCTRL=y
+CONFIG_PINCONF=y
+
diff --git a/include/configs/bpi_r4.h b/include/configs/bpi_r4.h
new file mode 100644
@@
+#ifndef __CONFIG_BPI_R4_H
+#define __CONFIG_BPI_R4_H
+
+#include <linux/stringify.h>
+
+#define BPI_KERNEL   "bpi-r4.itb"
+
+/* safe booti without initrd */
+#define BPI_BOOT_NOINITRD "booti ${kernel_addr_r} - ${fdt_addr_r}"
+
+/* load addresses */
+#define CFG_LOADADDR        0x46000000
+#define kernel_addr_r       0x46000000
+#define fdt_addr_r          0x47000000
+
+/* media detection and path */
+#define BPI_MEDIA_DETECT \
+ "if test ${bootmedia} = emmc; then setenv devnum 0; setenv devtype mmc; fi; " \
+ "if test ${bootmedia} = sd;   then setenv devnum 0; setenv devtype mmc; fi; "
+
+/* clean config selection. single conf. no double FDT loads */
+#define BPI_BOOTCONF "conf-sd"
+
+/* main boot */
+#define BPI_BOOTCMD \
+ "run bpi_preboot; " \
+ "echo Boot from ${bootmedia}; " \
+ BPI_MEDIA_DETECT \
+ "if ${devtype} dev ${devnum}; then " \
+   "fatload ${devtype} ${devnum}:1 ${kernel_addr_r} ${kernel} || " \
+   "ext4load ${devtype} ${devnum}:1 ${kernel_addr_r} ${kernel}; " \
+   "iminfo ${kernel_addr_r}; " \
+   "imxtract ${kernel_addr_r} ${fdt_addr_r} fdt@fdt-base; " \
+   "setenv bootargs console=ttyS0,115200n1 root=/dev/mmcblk0p6 rootfstype=ext4 rootwait; " \
+   BPI_BOOT_NOINITRD "; " \
+ "fi;"
+
+#define CFG_EXTRA_ENV_SETTINGS \
+ "bootmedia=sd\0" \
+ "kernel=" BPI_KERNEL "\0" \
+ "bootcmd=" BPI_BOOTCMD "\0" \
+ "bpi_preboot=env exists ethaddr || setenv ethaddr 02:00:00:00:00:00\0"
+
+#include <configs/mt7986.h>
+
+#endif
-- 
2.45.2
